/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package abc_company;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import static java.lang.String.valueOf;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Phone
 */
public class hallBook extends javax.swing.JFrame {
    Connection con = null;
   DefaultTableModel dtm;
   
    public hallBook() {
        initComponents();
        this.setLocationRelativeTo(null);
        con = DBconnection.connect();
       generateBookingId();
       fill_place_combobox();
       tableload();
       //CreateColumn();
       btnUpdate.disable();
       bthDelete.disable();
     //  Jdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lb_bookingNo = new javax.swing.JLabel();
        txtNicNum = new javax.swing.JTextField();
        cmbPlace = new javax.swing.JComboBox<String>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbHall = new javax.swing.JComboBox<String>();
        startDate = new com.toedter.calendar.JDateChooser();
        endDate = new com.toedter.calendar.JDateChooser();
        btnAdd = new java.awt.Button();
        btnUpdate = new java.awt.Button();
        bthDelete = new java.awt.Button();
        txtCustomerName = new javax.swing.JTextField();
        btnReset = new java.awt.Button();
        selectdate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        report = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Booking No");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Customer Name");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("NIC number");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Place");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Duration");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Hall");

        lb_bookingNo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtNicNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNicNumActionPerformed(evt);
            }
        });

        cmbPlace.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Place" }));

        jLabel8.setText("from");

        jLabel9.setText("to");

        cmbHall.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select hall" }));

        startDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startDateMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startDateMouseExited(evt);
            }
        });

        endDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                endDateMouseClicked(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAdd.setLabel("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnUpdate.setLabel("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        bthDelete.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bthDelete.setLabel("DELETE");
        bthDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthDeleteActionPerformed(evt);
            }
        });

        txtCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerNameActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnReset.setLabel("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        selectdate.setText("select date");
        selectdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(4, 4, 4)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(endDate, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNicNum, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(bthDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(cmbHall, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(50, 50, 50)
                                .addComponent(lb_bookingNo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectdate)
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lb_bookingNo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNicNum, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(startDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(selectdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbHall, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bthDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        lb_bookingNo.getAccessibleContext().setAccessibleName("bookingNo");
        txtNicNum.getAccessibleContext().setAccessibleName("");
        btnAdd.getAccessibleContext().setAccessibleName("");

        jPanel2.setBackground(new java.awt.Color(51, 255, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btn_search.setBackground(new java.awt.Color(0, 102, 102));
        btn_search.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_search.setText("SEARCH");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        report.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        report.setText("Report");
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_search)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(319, 319, 319)
                .addComponent(report)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(report)
                .addContainerGap())
        );

        txtSearch.getAccessibleContext().setAccessibleName("txtCustomerName");

        jLabel10.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLabel10.setText("HALL BOOKING");

        jButton5.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jButton5.setText("Logout");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jButton6.setText("HOME");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(266, 266, 266)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jLabel10)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtNicNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNicNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNicNumActionPerformed

    private void txtCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerNameActionPerformed
   
    //hall combobox load
    public void fill_hall_combobox()
   {
       SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
       Date stdate=startDate.getDate();
        String sd = dateFormat.format(stdate);
        Date eddate=endDate.getDate();
        String ed = dateFormat.format(eddate);
       String place=cmbPlace.getSelectedItem().toString();
       
       try
       {
           Connection con=DBconnection.connect();
           String query="SELECT hall_Name FROM hall WHERE hall_Name NOT IN (SELECT Hall FROM `booking` WHERE StartDate='"+sd+"' AND `EndDate`='"+ed+"') AND hall_Status=1 AND hall_Place='"+place+"'";
           PreparedStatement pst = con.prepareStatement(query);
           ResultSet rs = pst.executeQuery();
           while(rs.next()){
                cmbHall.addItem(rs.getString("hall_Name"));
                
            }
       }
      catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString(), "Error", JOptionPane.INFORMATION_MESSAGE);
        }
   }
    
    //list elements
    public ArrayList<DbHandling> ListUsers(String valToSearch)
    {
        ArrayList<DbHandling> userlist=new ArrayList<DbHandling>();
        Statement st;
        ResultSet rst;
        try
        {
            st=con.createStatement();
            String searchQuery="SELECT * FROM `booking` WHERE CONCAT(`BookingID`, `CustomerName`, `NIC`, `Hall`, `StartDate`, `EndDate`,`Place`) LIKE'%"+valToSearch+"%'";
            rst=st.executeQuery(searchQuery);
            
            DbHandling dh;
            while(rst.next())
            {
                dh=new DbHandling(
                                    rst.getString("BookingID"),
                                    rst.getString("CustomerName"),
                                    rst.getString("NIC"),
                                    rst.getString("Hall"),
                                    rst.getString("StartDate"),
                                    rst.getString("EndDate"),
                                    rst.getString("Place")
                        );
                userlist.add(dh);
            }
            
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
        }
        return userlist;
    }
    
    //search list
    public void findUsers()
    {
        ArrayList<DbHandling> users=ListUsers(txtSearch.getText());
        DefaultTableModel model= new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"BookingID","Customer Name","NIC","Hall","Start Date", "End Date","Place"});
        Object[] row=new Object[7];
        for(int i=0 ; i<users.size(); i++)
        {
            row[0]=users.get(i).getBookingid();
            row[1]=users.get(i).getCustomerName();
            row[2]=users.get(i).getNic();
            row[3]=users.get(i).getHall();
            row[4]=users.get(i).getStartDate();
            row[5]=users.get(i).getEndDate();
            row[6]=users.get(i).getPlace();
            model.addRow(row);
        }
        jTable1.setModel(model);
    }
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
       String pbkid=lb_bookingNo.getText();
        String pcustomerName=txtCustomerName.getText();
        String pnic=txtNicNum.getText();
         String phall=cmbHall.getSelectedItem().toString();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String sd = dateFormat.format(startDate.getDate());
        String ed = dateFormat.format(endDate.getDate());
       String place=cmbPlace.getSelectedItem().toString();
        
       // DbHandling dbh=new DbHandling(pbkid,pcustomerName,pnic,phall,sd,ed,place);
       if(pcustomerName.trim().isEmpty()|| pnic.trim().isEmpty()|| phall.trim().isEmpty()||place.trim().isEmpty())
       {
           
           JOptionPane.showMessageDialog(null, "Please fill all details!!");
       }
       else if(!pnic.trim().matches("^[0-9]{9}[vVxX]$"))
       {
          JOptionPane.showMessageDialog(null,"Invalid NIC ");
       }
       else
       {
           try
           {
               if(DbHandling.insertValue(pbkid,pcustomerName,pnic,phall,sd,ed,place))
                {
                        JOptionPane.showMessageDialog(null, "Successfully Added to DataBase!!");
                 }
               else
               {
                    JOptionPane.showMessageDialog(null, "UnsucessFully");
               }
               //populate(pbkid,pcustomerName,pnic,phall,sd,ed);
            tableload();
            reset();
           }
           catch(Exception ex)
            {
                  System.out.println(ex);
            }
            
       }
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row=jTable1.getSelectedRow();
        String BookingNo=jTable1.getValueAt(row, 0).toString();
        String CustomerName=jTable1.getValueAt(row, 1).toString();
        String nicNo=jTable1.getValueAt(row, 2).toString();
        String hallno=jTable1.getValueAt(row, 3).toString();
        try {
            Date sdate=new SimpleDateFormat("yyyy-MM-dd").parse((String)jTable1.getValueAt(row, 4).toString());
            startDate.setDate(sdate);
            
            Date edate=new SimpleDateFormat("yyyy-MM-dd").parse((String)jTable1.getValueAt(row, 5).toString());
            endDate.setDate(edate);
            
        } catch (ParseException ex) {
            Logger.getLogger(hallBook.class.getName()).log(Level.SEVERE, null, ex);
        }
        String place=jTable1.getValueAt(row, 6).toString();
        lb_bookingNo.setText(BookingNo);
        txtCustomerName.setText(CustomerName);
        txtNicNum.setText(nicNo);
        cmbPlace.setSelectedItem(place);
        cmbHall.setSelectedItem(hallno);
        btnAdd.disable();
        btnUpdate.enable();
        bthDelete.enable();
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        //update
        int x = JOptionPane.showConfirmDialog(null, "Do you really want to update");
        
        if(x == 0)
        {
            String bookingid=lb_bookingNo.getText();
            String pcustomerName=txtCustomerName.getText();
            String pnic=txtNicNum.getText();
            String phall=cmbHall.getSelectedItem().toString();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String sd = dateFormat.format(startDate.getDate());
            String ed = dateFormat.format(endDate.getDate());
            String place=cmbPlace.getSelectedItem().toString();
            if(pcustomerName.trim().isEmpty()|| pnic.trim().isEmpty()|| phall.trim().isEmpty() ||place.trim().isEmpty())
            {
           
                        JOptionPane.showMessageDialog(null, "Please fill all details!!");
            }
            else
            {
                 try{
                        if(DbHandling.upDateValue(bookingid,pcustomerName,pnic,phall,sd,ed,place))
                            {
                                 JOptionPane.showMessageDialog(null, "Successfully Updated!!");
                             }
                        else
                        {
                                     JOptionPane.showMessageDialog(null, "Try Again");
                        }
                             tableload();
                             reset();
                    }
               catch(Exception ex)
              {
                        System.out.println(ex);
              }
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reset();//call reset button function
    }//GEN-LAST:event_btnResetActionPerformed

    private void bthDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthDeleteActionPerformed
        //delete function
        String bookingid=lb_bookingNo.getText();
        String pcustomerName=txtCustomerName.getText();
        String pnic=txtNicNum.getText();
        String phall=cmbHall.getSelectedItem().toString();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String sd = dateFormat.format(startDate.getDate());
        String ed = dateFormat.format(endDate.getDate());
        String place=cmbPlace.getSelectedItem().toString();
        
        int x = JOptionPane.showConfirmDialog(null, "Do you really want to delete");
        
        if(pcustomerName.trim().isEmpty()|| pnic.trim().isEmpty()|| phall.trim().isEmpty() ||place.trim().isEmpty())
        {
           JOptionPane.showMessageDialog(null, "Please fill all details!!");
        }
        else
        {
            int status=0;
            if(x == 0)
            {
                try
                {
                        if(DbHandling.deleteValue(bookingid,status))
                        {
                            JOptionPane.showMessageDialog(null, "Successfully Deleted!!");
                        }
                        else
                        {
                             JOptionPane.showMessageDialog(null, "Try Again");
                        }
                             tableload();
                             reset();
                }
                catch(Exception ex)
                {
                     System.out.println(ex);
                }
            }
        }
        
    }//GEN-LAST:event_bthDeleteActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        findUsers();
    }//GEN-LAST:event_btn_searchActionPerformed

    private void startDateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startDateMouseExited
        fill_hall_combobox();
    }//GEN-LAST:event_startDateMouseExited

    private void endDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endDateMouseClicked
        fill_hall_combobox();
    }//GEN-LAST:event_endDateMouseClicked

    private void startDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startDateMouseClicked
        fill_hall_combobox();
    }//GEN-LAST:event_startDateMouseClicked

    private void selectdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectdateActionPerformed
//       SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//       Date stdate=startDate.getDate();
//        String sd = dateFormat.format(stdate);
//        Date eddate=endDate.getDate();
//        String ed = dateFormat.format(eddate);
//       String place=cmbPlace.getSelectedItem().toString();
//       
//       try
//       {
//           Connection con=DBconnection.connect();
//           String query="SELECT hall_Name FROM hall WHERE hall_Name NOT IN (SELECT Hall FROM `booking` WHERE StartDate='"+sd+"' AND `EndDate`='"+ed+"') AND hall_Status=1";
//           PreparedStatement pst = con.prepareStatement(query);
//           ResultSet rs = pst.executeQuery();
//           while(rs.next()){
//                cmbHall.addItem(rs.getString("hall_Name"));
//                
//            }
//       }
//      catch(Exception ex)
//        {
//            JOptionPane.showMessageDialog(null, ex.toString(), "Error", JOptionPane.INFORMATION_MESSAGE);
//        }
    fill_hall_combobox();
    }//GEN-LAST:event_selectdateActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.setVisible(false);       //switch to next page
        new login().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        //        try {
            //            InputStream in = new FileInputStream(new File("C:\\Users\\Thenuja\\Desktop\\OOP_assignment\\ABC_company\\src\\abc_company\\report3.jrxml"));
            //            try {
                //                JasperDesign jd= JRXmlLoader.load(in);
                //                String sql="SELECT `hall_No`, `hall_Name`, `hall_Place` FROM `hall` WHERE `hall_Status`=1";
                //                JRDesignQuery newQuery= new JRDesignQuery();
                //                newQuery.setText(sql);
                //                jd.setQuery(newQuery);
                //                JasperReport jr=JasperCompileManager.compileReport(jd);
                //                HashMap para=new HashMap();
                //                JasperPrint j=JasperFillManager.fillReport(jr,para,con);
                //                JasperViewer.viewReport(j, false);
                //                OutputStream os=new FileOutputStream(new File("C:\\Users\\Thenuja\\Desktop\\OOP_assignment"));
                //                JasperExportManager.exportReportToPdfStream(j,os);
                //            } catch (JRException ex) {
                //                Logger.getLogger(HallDetails.class.getName()).log(Level.SEVERE, null, ex);
                //            }
            //        } catch (FileNotFoundException ex) {
            //            Logger.getLogger(HallDetails.class.getName()).log(Level.SEVERE, null, ex);
            //        }

        try{

            //            String report="C:\\Users\\Thenuja\\Desktop\\OOP_assignment\\ABC_company\\src\\abc_company\\report3.jrxml";
            String report = "C:\\Users\\Thenuja\\Desktop\\OOP_assignment\\ABC_company\\src\\abc_company\\booking_report.jrxml";
            JasperReport jr=JasperCompileManager.compileReport(report);
            JasperPrint j=JasperFillManager.fillReport(jr,null,con);
            JasperViewer.viewReport(j);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_reportActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.setVisible(false);       //switch to next page
        new Home().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed
    //reset button
    public void reset()
    {
        lb_bookingNo.setText("");
        txtCustomerName.setText("");
        txtNicNum.setText("");
        cmbHall.removeAllItems();
        txtSearch.setText("");
        Date date = new Date();
        startDate.setDate(date);
        endDate.setDate(date);
        cmbPlace.setSelectedIndex(0);
        
        generateBookingId();
        btnAdd.enable();
        btnUpdate.disable();
        tableload();
    }
    
    //auto increment booking id
    public void generateBookingId()
    {
       
    try
    {
        String query="Select count('BookingID')as countNo from booking";
        PreparedStatement pst=con.prepareStatement(query);
        ResultSet rs=pst.executeQuery();
        String prefix="BK_";
        while(rs.next())
        {
        int num = rs.getInt("countNo");
        int inc=num+1;
        String id=prefix+inc;
        lb_bookingNo.setText(id);
        lb_bookingNo.setVisible(true);

        }

    }

    catch(Exception a)
    {
        a.printStackTrace();
    }
    }
    private void CreateColumn()
    {
        dtm=(DefaultTableModel) jTable1.getModel();
        
        //add columns
        dtm.addColumn("Booking ID");
        dtm.addColumn("Customer Name");
        dtm.addColumn("NIC");
        dtm.addColumn("Hall");
        dtm.addColumn("Start Date");
        dtm.addColumn("End Date");
    }
//add row on table
    private void populate(String bookingid, String customername, String nic, String hall, String startdate, String enddate)
    {
        String[] rowData={bookingid, customername, nic,hall,startdate,enddate};
        dtm.addRow(rowData);
    }
//table load function    
     public void tableload()
   {
       try 
       {
         String sql = "SELECT BookingID,CustomerName,NIC,Hall,StartDate,EndDate,Place FROM booking WHERE status=1";
        PreparedStatement pst = con.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();
         
         jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         
       } 
       catch (Exception e) 
       {
           System.out.println(e);
       }
   }
  //fill place combo box
  public void fill_place_combobox()
   {
       try
       {
           Connection con=DBconnection.connect();
           String query="SELECT hall_Place FROM hall WHERE hall_Status=1";
           PreparedStatement pst = con.prepareStatement(query);
           ResultSet rs = pst.executeQuery();
           while(rs.next()){
                cmbPlace.addItem(rs.getString("hall_Place"));
                
            }
       }
      catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString(), "Error", JOptionPane.INFORMATION_MESSAGE);
        }
       
       
   }
   
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hallBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hallBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hallBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hallBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        hallBook hb=new hallBook();
        hb.generateBookingId();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hallBook().setVisible(true);
               new hallBook().generateBookingId();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button bthDelete;
    private java.awt.Button btnAdd;
    private java.awt.Button btnReset;
    private java.awt.Button btnUpdate;
    private javax.swing.JButton btn_search;
    private javax.swing.JComboBox<String> cmbHall;
    private javax.swing.JComboBox<String> cmbPlace;
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lb_bookingNo;
    private javax.swing.JButton report;
    private javax.swing.JButton selectdate;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtNicNum;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
